# -*- coding: utf-8 -*-
"""
Created on Tue Jun 15 01:07:46 2021

@author: 84840
"""

5
import random
魔法取得率 = 0.03

プレイヤー1 = {"名前": "", "最大体力": 100, "体力": 100, "攻撃力": 50, "素早さ": 100,
          "魔法": [], "最大魔力": 5, "魔力": 5, "状態": {}, "道具": {}, "所持金": 1000, "宿屋の利用回数": 0, "ターン": 1, "敵数": 2,
          "敵リスト": []}
プレイヤー2 = {"名前": "", "最大体力": 100, "体力": 100, "攻撃力": 50, "素早さ": 100,
          "魔法": [], "最大魔力": 5, "魔力": 5, "状態": {}, "道具": {}, "所持金": 1000, "宿屋の利用回数": 0, "ターン": 1, "敵数": 2,
          "敵リスト": []}

消費魔力={"キュア":1,"加速斬り":2,"ファイア":2,"ポイズン":2,"ザップ":3,"トリック":3,"プラズマ":4,"ヒール":5,"フレイム":5,"スリープ":6,"麻薬注入":7,
      "チャージ":1,"スピード":1,"ブレイブ":2,"スクイズ":2,"強制正座":2,"回転イス":2,"長講義":5,"長説教":5,"体罰":4,"毒舌":3,
      "鼻くそ爆弾":2,"大西ステップ":1,"大西ダンス":1,"大西ソング":3,"大西フェイス":1,"ア・ラウンド・フォー・ティー":1,"針100本飲ます":3,"ア・ラウンド・ファイブ・ハンドレッド":9,
      "ハイパボリックタンジェントアタック":10,"シャ・ラップ":0,"予防接種":2,"Ｋ・Ｊ・Ａ":2}

魔法リスト=["キュア","加速斬り","ファイア","ポイズン","ザップ","トリック","プラズマ","ヒール","フレイム","スリープ","麻薬注入",
      "チャージ","スピード","ブレイブ","スクイズ","強制正座","回転イス","長講義","長説教","体罰","毒舌",
      "鼻くそ爆弾","大西ステップ","大西ダンス","大西ソング","大西フェイス","ア・ラウンド・フォー・ティー","針100本飲ます","ア・ラウンド・ファイブ・ハンドレッド",
      "ハイパボリックタンジェントアタック","シャ・ラップ","予防接種","Ｋ・Ｊ・Ａ"]

ファイア倍率,ヒール倍率,プラズマ倍率,プラズマ確率,フレイム倍率=1,0.5,1.5,0.5,2
スクイズダメージ,長説教ダメージ,毒舌ダメージ,ダンスダメージ,ハイパ倍率=5,5,5,10,2
毒倍率,麻痺倍率,麻痺確率,睡眠回復率,睡眠ターン,混乱確率,混乱解除率=0.1,0.5,0.5,0.1,3,0.5,0.25
攻撃力上昇率,攻撃力上昇ターン,素早さ上昇率,素早さ上昇ターン=1.5,4,2,4
薬草の回復量,上薬草の回復量,特薬草の回復量,魔力剤の回復量,超魔力剤の回復量=50,200,1000,5,20
戦闘時の薬草の回復量=60
クリティカル率,回避率,公庄率=0.1,0.1,0.1

敵情報={"すらいむ":{"名前":"すらいむ","最大体力":50,"体力":50,"攻撃力":20,"素早さ":80,"最大魔力":3,"魔力":3,"状態":{},
             "行動":("攻撃","攻撃","ファイア","スピード"),"経験値":{"最大体力":5,"攻撃力":3,"素早さ":5,"最大魔力":0,"所持金":300}},
     "ゴブリン": {"名前": "ゴブリン", "最大体力": 80, "体力": 80, "攻撃力": 40, "素早さ": 140, "最大魔力": 5, "魔力": 5, "状態": {},
              "行動": ("攻撃","攻撃", "攻撃","大西ステップ"), "経験値": {"最大体力": 3, "攻撃力": 3, "素早さ": 3, "最大魔力": 0, "所持金": 1000}},
     "オーク": {"名前": "オーク", "最大体力": 180, "体力": 180, "攻撃力": 70, "素早さ": 80, "最大魔力": 5, "魔力": 5, "状態": {},
              "行動": ("攻撃","攻撃", "大西フェイス","鼻くそ爆弾"), "経験値": {"最大体力": 40, "攻撃力": 5, "素早さ": 10, "最大魔力": 0, "所持金": 500}},
     "ネクロマンサー": {"名前": "ネクロマンサー", "最大体力": 120, "体力": 120, "攻撃力": 30, "素早さ": 140, "最大魔力": 50, "魔力": 50, "状態": {},
              "行動": ("フレイム", "プラズマ","ポイズン","スリープ","ザップ","スクイズ"), "経験値": {"最大体力": 10, "攻撃力": 3, "素早さ": 10, "最大魔力": 3, "所持金": 500}},
     "サキュバス": {"名前": "サキュバス", "最大体力": 160, "体力": 160, "攻撃力": 50, "素早さ": 180, "最大魔力": 30, "魔力": 30, "状態": {},
              "行動": ("攻撃","ファイア","スクイズ","ヒール","スリープ"), "経験値": {"最大体力": 15, "攻撃力": 5, "素早さ": 15, "最大魔力": 2, "所持金": 1000}},
     "エルフ": {"名前": "エルフ", "最大体力": 300, "体力": 300, "攻撃力": 100, "素早さ": 220, "最大魔力": 20, "魔力": 20, "状態": {},
              "行動": ("攻撃","攻撃", "ヒール", "スピード","プラズマ","加速斬り"), "経験値": {"最大体力": 50, "攻撃力": 10, "素早さ": 20, "最大魔力": 1, "所持金": 1500}},
     "ベビーエンジェル": {"名前": "ベビーエンジェル", "最大体力": 200, "体力": 200, "攻撃力": 50, "素早さ": 130, "最大魔力": 30, "魔力": 30, "状態": {},
              "行動": ("攻撃","攻撃","キュア", "ヒール", "大西ソング","スリープ"), "経験値": {"最大体力": 20, "攻撃力": 5, "素早さ": 10, "最大魔力": 1, "所持金": 500}},
     "ベビーデビル": {"名前": "ベビーデビル", "最大体力": 200, "体力": 200, "攻撃力": 50, "素早さ": 130, "最大魔力": 3, "魔力": 3, "状態": {},
              "行動": ("攻撃","攻撃", "攻撃","スリープ","フレイム","麻薬注入", "ハイパボリックタンジェントアタック"), "経験値": {"最大体力": 20, "攻撃力": 5, "素早さ": 10, "最大魔力": 1, "所持金": 500}},
     "勇者の幼馴染": {"名前": "勇者の幼馴染", "最大体力": 1500, "体力": 1500, "攻撃力": 400, "素早さ": 420, "最大魔力": 50, "魔力": 50, "状態": {},
              "行動": ("攻撃", "ファイア","ヒール","キュア","プラズマ","長説教"), "経験値": {"最大体力": 400, "攻撃力": 40, "素早さ": 40, "最大魔力": 3, "所持金": 5000}},
     "魔王の側近": {"名前": "魔王の側近", "最大体力": 2000, "体力": 2000, "攻撃力": 300, "素早さ": 360, "最大魔力": 40, "魔力": 40, "状態": {},
              "行動": ("攻撃", "攻撃","ポイズン","フレイム","ブレイブ","トリック","毒舌"), "経験値": {"最大体力": 500, "攻撃力": 30, "素早さ": 40, "最大魔力": 2, "所持金": 7000}},
     "ビッグウェスト": {"名前": "ビッグウェスト", "最大体力": 10000, "体力": 10000, "攻撃力": 100, "素早さ": 100, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ("大西ステップ","大西ステップ","大西ステップ","大西ステップ","大西ステップ","大西ステップ","大西ステップ","大西ステップ","大西ステップ","大西ステップ",
                      "大西ダンス","大西ダンス","大西ダンス","大西ダンス","大西ダンス","大西ダンス","大西ダンス","大西ダンス","大西ダンス","大西ダンス",
                      "大西ソング","大西ソング","大西ソング","大西ソング","大西ソング","大西ソング","大西ソング","大西ソング","大西ソング","大西ソング",
                      "大西フェイス","大西フェイス","大西フェイス","大西フェイス","大西フェイス","大西フェイス","大西フェイス","大西フェイス","大西フェイス","大西フェイス"),
                 "経験値": {"最大体力": 300, "攻撃力": 10, "素早さ": 10, "最大魔力": 0, "所持金": 15}},
     "害悪野郎": {"名前": "害悪野郎", "最大体力": 100, "体力": 100, "攻撃力": 50, "素早さ": 100, "最大魔力": 10, "魔力": 10, "状態": {},
               "行動": ("攻撃", "回転イス", "鼻くそ爆弾", "大西ステップ", "大西ダンス", "大西ソング", "大西フェイス"),"経験値": {"最大体力": 10, "攻撃力": 5, "素早さ": 10, "最大魔力": 0, "所持金": 1000}},
     "害悪教師": {"名前": "害悪教師", "最大体力": 300, "体力": 300, "攻撃力": 150, "素早さ": 300, "最大魔力": 30, "魔力": 30, "状態": {},
              "行動": ("強制正座", "長講義", "長説教", "体罰", "毒舌", "ア・ラウンド・フォー・ティー"),"経験値": {"最大体力": 10, "攻撃力": 5, "素早さ": 10, "最大魔力": 0, "所持金": 3000}},
     "ガイア・クオウ": {"名前": "ガイア・クオウ", "最大体力": 900, "体力": 900, "攻撃力": 450, "素早さ": 900, "最大魔力": 90, "魔力": 90, "状態": {},
              "行動": ("針100本飲ます", "ハイパボリックタンジェントアタック", "麻薬注入", "シャ・ラップ", "超魔力剤"),"道具":{"超魔力剤":100},"経験値": {"最大体力": 10, "攻撃力": 5, "素早さ": 10, "最大魔力": 0, "所持金": 10000}},
     "小鬼": {"名前": "小鬼", "最大体力": 70, "体力": 70, "攻撃力": 40, "素早さ": 80, "最大魔力": 5, "魔力": 5, "状態": {},
                "行動": ("攻撃", "攻撃", "ブレイブ","大西ステップ"), "経験値": {"最大体力": 10, "攻撃力": 5, "素早さ": 10, "最大魔力": 0, "所持金": 500}},
     "ハッピー・サ・ターン": {"名前": "ハッピー・サ・ターン", "最大体力": 200, "体力": 200, "攻撃力": 80, "素早さ": 160, "最大魔力": 20, "魔力": 20, "状態": {},
            "行動": ("攻撃", "麻薬注入", "スリープ","毒舌","針100本飲ます"), "経験値": {"最大体力": 40, "攻撃力": 10, "素早さ": 15, "最大魔力": 2, "所持金": 1000}},
     "見習い大魔王":{"名前": "見習い大魔王", "最大体力": 600, "体力": 600, "攻撃力": 200, "素早さ": 240, "最大魔力": 50, "魔力": 50, "状態": {},
            "行動": ("攻撃", "強制正座", "針100本飲ます","回転イス","ハイパボリックタンジェントアタック"), "経験値": {"最大体力": 50, "攻撃力": 10, "素早さ": 10, "最大魔力": 4, "所持金": 3000}},
     "レミフラ・スカーレット": {"名前": "レミフラ・スカーレット", "最大体力": 1200, "体力": 1200, "攻撃力": 500, "素早さ": 600, "最大魔力": 30, "魔力": 30,"状態": {},
            "行動": ("攻撃", "麻薬注入", "フレイム", "スクイズ", "プラズマ","加速斬り","ア・ラウンド・ファイブ・ハンドレッド"),"経験値": {"最大体力": 300, "攻撃力": 50, "素早さ": 60, "最大魔力": 1, "所持金": 8000}},
     "鬼ぎりくん": {"名前": "鬼ぎりくん", "最大体力": 40, "体力": 40, "攻撃力": 40, "素早さ": 40, "最大魔力": 10, "魔力": 10,"状態": {},
                     "行動": ("攻撃", "攻撃", "チャージ", "ア・ラウンド・フォー・ティー"),"経験値": {"最大体力": 5, "攻撃力": 5, "素早さ": 3, "最大魔力": 0, "所持金": 300}},
     "大天狗": {"名前": "大天狗", "最大体力": 800, "体力": 800, "攻撃力": 200, "素早さ": 500, "最大魔力": 20, "魔力": 20, "状態": {},
               "行動": ("攻撃","攻撃", "スピード", "ザップ", "トリック"),"経験値": {"最大体力": 200, "攻撃力": 20, "素早さ": 50, "最大魔力": 1, "所持金": 2000}},
     "脳筋幽霊": {"名前": "脳筋幽霊", "最大体力": 160, "体力": 160, "攻撃力": 80, "素早さ": 140, "最大魔力": 3, "魔力": 3, "状態": {},
               "行動": ("攻撃","攻撃", "攻撃", "大西ステップ"),"経験値": {"最大体力": 30, "攻撃力": 10, "素早さ": 10, "最大魔力": 0, "所持金": 500}},
     "ファイアボールゴースト": {"名前": "ファイアボールゴースト", "最大体力": 60, "体力": 60, "攻撃力": 30, "素早さ": 160, "最大魔力": 10, "魔力": 10, "状態": {},
              "行動": ("攻撃", "ファイア", "大西ソング"), "経験値": {"最大体力": 5, "攻撃力": 3, "素早さ": 5, "最大魔力": 1, "所持金": 300}},
     "スモールイースト": {"名前": "スモールイースト", "最大体力":1000, "体力": 1000, "攻撃力": 10, "素早さ": 10, "最大魔力": 10, "魔力": 10, "状態": {},
                     "行動": ("攻撃", "攻撃", "大西フェイス"), "経験値": {"最大体力": 50, "攻撃力": 1, "素早さ": 1, "最大魔力": 0, "所持金": 10}},
     "ク・ジョイ": {"名前": "ク・ジョイ", "最大体力":40, "体力": 40, "攻撃力": 100, "素早さ": 70, "最大魔力": 5, "魔力": 5, "状態": {},
                  "行動": ("攻撃","攻撃","トリック", "鼻くそ爆弾", "大西フェイス","Ｋ・Ｊ・Ａ"), "経験値": {"最大体力": 5, "攻撃力": 10, "素早さ": 3, "最大魔力": 0, "所持金": 30}},
     "子鼠ハム": {"名前": "子鼠ハム", "最大体力": 60, "体力": 60, "攻撃力": 20, "素早さ": 80, "最大魔力": 0, "魔力": 0, "状態": {},
              "行動": ("攻撃",), "経験値": {"最大体力": 10, "攻撃力": 5, "素早さ": 15, "最大魔力": 0, "所持金": 0}},
     "猫又タマ": {"名前": "猫又タマ", "最大体力": 100, "体力": 100, "攻撃力": 40, "素早さ": 160, "最大魔力": 1, "魔力": 1, "状態": {},
               "行動": ("攻撃",),"経験値": {"最大体力": 20, "攻撃力": 10, "素早さ": 30, "最大魔力": 0, "所持金": 0}},
     "狂犬ポチ": {"名前": "狂犬ポチ", "最大体力":140, "体力": 140, "攻撃力": 60, "素早さ": 140, "最大魔力": 0, "魔力": 0, "状態": {},
                  "行動": ("攻撃",), "経験値": {"最大体力": 30, "攻撃力": 15, "素早さ": 30, "最大魔力": 0, "所持金": 0}},
     "オルトロス": {"名前": "オルトロス", "最大体力":240, "体力": 240, "攻撃力": 80, "素早さ": 220, "最大魔力": 0, "魔力": 0, "状態": {},
                  "行動": ("攻撃",), "経験値": {"最大体力": 60, "攻撃力": 15, "素早さ": 45, "最大魔力": 0, "所持金": 0}},
     "ケルベロス": {"名前": "ケルベロス", "最大体力": 400, "体力": 400, "攻撃力": 120, "素早さ": 260, "最大魔力": 0, "魔力": 0, "状態": {},
               "行動": ("攻撃",),"経験値": {"最大体力": 120, "攻撃力": 20, "素早さ": 50, "最大魔力": 0, "所持金": 0}},
     "ペガサス": {"名前": "ペガサス", "最大体力": 700, "体力": 700, "攻撃力": 200, "素早さ": 340, "最大魔力": 0, "魔力": 0, "状態": {},
               "行動": ("攻撃",), "経験値": {"最大体力": 250, "攻撃力": 30, "素早さ": 70, "最大魔力": 0, "所持金": 0}},
     "おもちすらいむ": {"名前": "おもちすらいむ", "最大体力": 300, "体力": 300, "攻撃力": 30, "素早さ": 30, "最大魔力": 0, "魔力": 0, "状態": {},
               "行動": ("攻撃",), "経験値": {"最大体力": 50 , "攻撃力": 3, "素早さ": 3, "最大魔力": 0, "所持金": 0}},
     "ビッグすらいむ": {"名前": "ビッグすらいむ", "最大体力": 500, "体力": 500, "攻撃力": 50, "素早さ": 50, "最大魔力": 0, "魔力": 0, "状態": {},
               "行動": ("攻撃",), "経験値": {"最大体力": 100, "攻撃力": 5, "素早さ": 5, "最大魔力": 0, "所持金": 0}},
     "ビックリすらいむ！": {"名前": "ビックリすらいむ！", "最大体力": 1000, "体力": 1000, "攻撃力": 100, "素早さ": 100, "最大魔力": 0, "魔力": 0, "状態": {},
               "行動": ("攻撃",), "経験値": {"最大体力": 250, "攻撃力": 10, "素早さ": 10, "最大魔力": 0, "所持金": 0}},
     "ヤマタノオロチ": {"名前": "ヤマタノオロチ", "最大体力": 3000, "体力": 3000, "攻撃力": 500, "素早さ": 500, "最大魔力": 0, "魔力": 0, "状態": {},
               "行動": ("攻撃",),"経験値": {"最大体力": 1500, "攻撃力": 100, "素早さ": 100, "最大魔力": 0, "所持金": 0}},
     "銅メッキすらいむ": {"名前": "銅メッキすらいむ", "最大体力": 100, "体力": 100, "攻撃力": 10, "素早さ": 10, "最大魔力": 100, "魔力": 100, "状態": {},
                  "行動": ("ハイパボリックタンジェントアタック","ハイパボリックタンジェントアタック", "大西ダンス", "逃げる"),"経験値": {"最大体力": 5, "攻撃力": 5, "素早さ": 5, "最大魔力": 0, "所持金": 2000}},
     "銀メッキすらいむ": {"名前": "銀メッキすらいむ", "最大体力": 200, "体力": 200, "攻撃力": 10, "素早さ": 10, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ( "ハイパボリックタンジェントアタック","ハイパボリックタンジェントアタック", "大西ダンス", "逃げる"),"経験値": {"最大体力": 5, "攻撃力": 5, "素早さ": 5, "最大魔力": 0, "所持金": 4000}},
     "金メッキすらいむ": {"名前": "金メッキすらいむ", "最大体力": 300, "体力": 300, "攻撃力": 10, "素早さ": 10, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ( "ハイパボリックタンジェントアタック","ハイパボリックタンジェントアタック", "大西ダンス", "逃げる"),"経験値": {"最大体力": 5, "攻撃力": 5, "素早さ": 5, "最大魔力": 0, "所持金": 6000}},
     "プラチナメッキすらいむ": {"名前": "プラチナメッキすらいむ", "最大体力": 500, "体力": 500, "攻撃力": 10, "素早さ": 10, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ( "ハイパボリックタンジェントアタック","ハイパボリックタンジェントアタック", "大西ダンス", "逃げる"),"経験値": {"最大体力": 5, "攻撃力": 5, "素早さ": 5, "最大魔力": 0, "所持金": 10000}},
     "魔メッキすらいむ": {"名前": "魔メッキすらいむ", "最大体力": 500, "体力": 500, "攻撃力": 10, "素早さ": 10, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ( "ハイパボリックタンジェントアタック","ハイパボリックタンジェントアタック", "大西ダンス", "逃げる"),"経験値": {"最大体力": 5, "攻撃力": 5, "素早さ": 5, "最大魔力": 10, "所持金": 0}},
     "筋メッキすらいむ": {"名前": "筋メッキすらいむ", "最大体力": 500, "体力": 500, "攻撃力": 10, "素早さ": 10, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ( "ハイパボリックタンジェントアタック","ハイパボリックタンジェントアタック", "大西ダンス", "逃げる"),"経験値": {"最大体力": 5, "攻撃力": 100, "素早さ": 5, "最大魔力": 0, "所持金": 0}},
     "北の金ちゃん": {"名前": "北の金ちゃん", "最大体力": 200, "体力": 200, "攻撃力": 10, "素早さ": 100, "最大魔力": 10, "魔力": 10, "状態": {},
                  "行動": ("攻撃", "攻撃", "攻撃","チャージ"),"経験値": {"最大体力": 10, "攻撃力": 3, "素早さ": 10, "最大魔力": 0, "所持金": 500}},
     "５２のカードマン": {"名前": "５２のカードマン", "最大体力": 100, "体力": 100, "攻撃力": 20, "素早さ": 100, "最大魔力": 10, "魔力": 10, "状態": {},
                "行動": ("攻撃", "攻撃", "攻撃","ブレイブ"),"経験値": {"最大体力": 10, "攻撃力": 3, "素早さ": 10, "最大魔力": 0, "所持金": 500}},
     "ゴーレム": {"名前": "ゴーレム", "最大体力": 1000, "体力": 1000, "攻撃力": 300, "素早さ": 100, "最大魔力": 20, "魔力": 20, "状態": {},
                  "行動": ("攻撃", "攻撃", "鼻くそ爆弾","ブレイブ"),"経験値": {"最大体力": 250, "攻撃力": 30, "素早さ": 10, "最大魔力": 1, "所持金": 3000}},
     "クジ・ヨイ": {"名前": "クジ・ヨイ", "最大体力": 100, "体力": 100, "攻撃力": 150, "素早さ": 100, "最大魔力": 10, "魔力": 10, "状態": {},
               "行動": ("攻撃","鼻くそ爆弾","トリック","Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ"),
                "経験値": {"最大体力": 10, "攻撃力": 20, "素早さ": 5, "最大魔力": 0, "所持金": 30}},
     "ハイレイヤー": {"名前": "ハイレイヤー", "最大体力": 300, "体力": 300, "攻撃力": 400, "素早さ": 300, "最大魔力": 30, "魔力": 30, "状態": {},
               "行動": ("攻撃","鼻くそ爆弾","トリック","Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ"),
                "経験値": {"最大体力": 30, "攻撃力": 80, "素早さ": 15, "最大魔力": 0, "所持金": 30}},
     "クレマタイト": {"名前": "クレマタイト", "最大体力": 1000, "体力": 1000, "攻撃力": 1000, "素早さ": 1000, "最大魔力": 100, "魔力": 100, "状態": {},
               "行動": ("Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ", "Ｋ・Ｊ・Ａ"),
                "経験値": {"最大体力": 100, "攻撃力": 200, "素早さ": 50, "最大魔力": 0, "所持金": 30}},

     "自称魔王": {"名前": "自称魔王", "最大体力": 2000, "体力": 2000, "攻撃力": 300, "素早さ": 300, "最大魔力": 50, "魔力": 50, "状態": {}}
     }

敵一覧=("すらいむ","すらいむ","すらいむ","ゴブリン","ゴブリン","ゴブリン","オーク","オーク","オーク","エルフ","エルフ","エルフ","ゴーレム","ゴーレム","ゴーレム",
     "ネクロマンサー","ネクロマンサー","サキュバス","サキュバス","ベビーエンジェル","ベビーエンジェル","ベビーデビル","ベビーデビル",
     "勇者の幼馴染","魔王の側近",
     "ビッグウェスト","ビッグウェスト","害悪野郎","害悪野郎","害悪教師","害悪教師","ガイア・クオウ",
     "小鬼","小鬼","ハッピー・サ・ターン","ハッピー・サ・ターン","見習い大魔王","見習い大魔王","レミフラ・スカーレット",
     "鬼ぎりくん","鬼ぎりくん","大天狗","大天狗","脳筋幽霊","脳筋幽霊",
     "ファイアボールゴースト","ファイアボールゴースト","ファイアボールゴースト","スモールイースト","スモールイースト","ク・ジョイ","ク・ジョイ",
     "子鼠ハム","子鼠ハム","子鼠ハム","猫又タマ","猫又タマ","猫又タマ","狂犬ポチ","狂犬ポチ","狂犬ポチ",
     "オルトロス","オルトロス","ケルベロス","ケルベロス","ペガサス","ペガサス","ヤマタノオロチ",
     "おもちすらいむ","おもちすらいむ","ビッグすらいむ","ビッグすらいむ","ビックリすらいむ！","ビックリすらいむ！",
     "銅メッキすらいむ","銀メッキすらいむ","金メッキすらいむ","プラチナメッキすらいむ","魔メッキすらいむ","筋メッキすらいむ",
     "北の金ちゃん","北の金ちゃん","５２のカードマン","５２のカードマン",
     "クジ・ヨイ","クジ・ヨイ","ハイレイヤー","ハイレイヤー","クレマタイト",
     )

ラインナップ順序=["薬草","上薬草","エリクサー","毒消し","麻痺治し","気付け薬","万能薬","目覚まし時計",
        "魔力剤","超魔力剤","モンスター","望遠鏡",
        "ファイアの書","加速斬りの書","ワクチン調合書","ポイズンの書","ザップの書", "トリックの書",
        "プラズマの書","ヒールの書","フレイムの書","スリープの書","麻薬調合書"]

ラインナップ={"薬草":{"価格":300,"種類":"道具"},"上薬草":{"価格":1200,"種類":"道具"},"特薬草":{"価格":8000,"種類":"道具"},"エリクサー":{"価格":5000,"種類":"道具"},
        "毒消し":{"価格":200,"種類":"道具"},"麻痺治し":{"価格":200,"種類":"道具"},"気付け薬":{"価格":300,"種類":"道具"},
        "万能薬":{"価格":500,"種類":"道具"},"目覚まし時計":{"価格":500,"種類":"道具"},
        "魔力剤":{"価格":500,"種類":"道具"},"超魔力剤":{"価格":2500,"種類":"道具"},"モンスター":{"価格":500,"種類":"道具"},
        "望遠鏡":{"価格":500,"種類":"道具"},
        "キュアの書":{"価格":300,"種類":"魔導書","魔法":"キュア"},
        "ワクチン調合書":{"価格":1000,"種類":"魔導書","魔法":"予防接種"},"加速斬りの書":{"価格":500,"種類":"魔導書","魔法":"加速斬り"},
        "ファイアの書":{"価格":500,"種類":"魔導書","魔法":"ファイア"},"ポイズンの書":{"価格":1500,"種類":"魔導書","魔法":"ポイズン"},
        "ザップの書": {"価格": 2000, "種類": "魔導書", "魔法": "ザップ"}, "トリックの書": {"価格": 2000, "種類": "魔導書", "魔法": "トリック"},
        "プラズマの書":{"価格":3000,"種類":"魔導書","魔法":"プラズマ"},"ヒールの書":{"価格":4000,"種類":"魔導書","魔法":"ヒール"},
        "フレイムの書":{"価格":5000,"種類":"魔導書","魔法":"フレイム"},"スリープの書":{"価格":6000,"種類":"魔導書","魔法":"スリープ"},
        "麻薬調合書":{"価格":7000,"種類":"魔導書","魔法":"麻薬注入"}}

宿屋の基本料金,宿屋の追加料金=400,200

行動説明={"攻撃":"相手に自分の攻撃力以下のダメージを与える。",
      "薬草":"道具。体力を"+str(戦闘時の薬草の回復量)+"回復する。ただし、非戦闘時に使うと回復量が"+str(薬草の回復量)+"になる。",
      "上薬草":"道具。体力を"+str(上薬草の回復量)+"回復する。",
      "特薬草":"道具。体力を"+str(特薬草の回復量)+"回復する。ただし、非戦闘時に使うと回復量が"+str(int(薬草の回復量*ラインナップ["特薬草"]["価格"]/ラインナップ["薬草"]["価格"]))+"になる。",
      "エリクサー": "道具。体力を全回復する。",
      "毒消し":"道具。毒を治す。",
      "麻痺治し":"道具。麻痺を治す。",
      "気付け薬":"道具。混乱を治す。",
      "万能薬":"道具。全ての状態を治す。ただし、能力上昇効果も消える。",
      "目覚まし時計":"道具。眠りを覚ます。寝ていても使える。",
      "魔力剤":"道具。魔力を"+str(魔力剤の回復量)+"回復する。",
      "超魔力剤":"道具。魔力を"+str(超魔力剤の回復量)+"回復する。ただし、非戦闘時に使うと回復量が"+str(int(魔力剤の回復量*ラインナップ["超魔力剤"]["価格"]/ラインナップ["魔力剤"]["価格"]))+"になる。",
      "望遠鏡":"道具。持っていると戦闘する相手の選択が増える。",
      "モンスター":"道具。戦闘中に使うと"+str(攻撃力上昇ターン-1)+"ターンの間攻撃力が"+str(攻撃力上昇率)+"倍になる。",
      "チャージ":"魔法。消費魔力"+str(消費魔力["チャージ"])+"。次のターン自分の攻撃力が"+str(攻撃力上昇率)+"倍になり、"+str(素早さ上昇ターン-1)+"ターンの間素早さも"+str(素早さ上昇率)+"倍になる。",
      "ファイア":"魔法。消費魔力"+str(消費魔力["ファイア"])+"。敵に攻撃力と同等のダメージを与える。",
      "ポイズン":"魔法。消費魔力"+str(消費魔力["ポイズン"])+"。敵を毒状態にする。",
      "キュア":"魔法。自分の全ての状態を治す。ただし、能力上昇効果も消える。",
      "ヒール":"魔法。消費魔力"+str(消費魔力["ヒール"])+"。自分の体力を最大体力の"+str(int(ヒール倍率*100))+"％回復する。",
      "プラズマ":"魔法。消費魔力"+str(消費魔力["プラズマ"])+"。敵に通常攻撃の"+str(プラズマ倍率)+"倍のダメージを与える。また、"+str(int(プラズマ確率*100))+"の確率で敵を麻痺状態にする。",
      "スリープ":"魔法。消費魔力"+str(消費魔力["スリープ"])+"。敵を"+str(睡眠ターン)+"ターンの間、睡眠状態にする。",
      "フレイム":"魔法。消費魔力" + str(消費魔力["フレイム"]) + "。敵に通常攻撃の" + str(フレイム倍率) + "倍のダメージを与える。",
      "加速斬り":"魔法。消費魔力" + str(消費魔力["加速斬り"]) + "。敵に通常攻撃し、"+str(素早さ上昇ターン-1)+"ターンの間素早さも"+str(素早さ上昇率)+"倍になる。",
      "ザップ": "魔法。消費魔力" + str(消費魔力["ザップ"]) + "。敵を麻痺状態にする。",
      "トリック": "魔法。消費魔力" + str(消費魔力["トリック"]) + "。敵を混乱状態にする。",
      "麻薬注入":"魔法。消費魔力"+str(消費魔力["麻薬注入"])+"。敵を麻痺、混乱状態にするが、"+str(攻撃力上昇ターン-1)+"ターンの間攻撃力を"+str(攻撃力上昇率)+"倍にする。",
      "予防接種": "魔法。消費魔力"+str(消費魔力["予防接種"])+"。もし、何かの状態にかかったとき、1回自分の全ての状態を治す。ただし、能力上昇効果も消える。",
      "スピード": "魔法。消費魔力" + str(消費魔力["スピード"]) + "。" + str(素早さ上昇ターン - 1) + "ターンの間素早さが" + str(素早さ上昇率) + "倍になる。",
      "ブレイブ": "魔法。消費魔力" + str(消費魔力["ブレイブ"]) + "。" + str(攻撃力上昇ターン - 1) + "ターンの間攻撃力が" + str(攻撃力上昇率) + "倍になる。",
      "スクイズ": "魔法。消費魔力" + str(消費魔力["スクイズ"]) + "。敵の魔力に" + str(スクイズダメージ) + "以下のダメージを与え、自分の魔力を" + str(スクイズダメージ) + "回復する。",
      "強制正座": "魔法。消費魔力" + str(消費魔力["強制正座"]) + "。敵を麻痺状態にする。",
      "長講義": "魔法。消費魔力" + str(消費魔力["長講義"]) + "。敵を" + str(睡眠ターン) + "ターンの間、睡眠状態にする。",
      "長説教": "魔法。消費魔力" + str(消費魔力["長説教"]) + "。敵の魔力に" + str(長説教ダメージ) + "以下のダメージを与える。また、50%の確率で敵を睡眠状態にする。",
      "体罰": "魔法。消費魔力" + str(消費魔力["体罰"]) + "。敵に通常攻撃と同等のダメージを与える。また、50%の確率で敵を混乱状態にする。",
      "毒舌": "魔法。消費魔力" + str(消費魔力["毒舌"]) + "。敵の魔力に" + str(毒舌ダメージ) + "以下のダメージを与える。また、50%の確率で敵を毒状態にする。",
      "鼻くそ爆弾": "魔法。消費魔力" + str(消費魔力["鼻くそ爆弾"]) + "。敵に通常攻撃と同等のダメージを与える。また、50%の確率で敵を毒状態にする。",
      "大西ステップ": "魔法。消費魔力" + str(消費魔力["大西ステップ"]) + "。" + str(素早さ上昇ターン - 1) + "ターンの間素早さが" + str(素早さ上昇率) + "倍になる。",
      "大西ダンス": "魔法。消費魔力" + str(消費魔力["大西ダンス"]) + "。敵の魔力に" + str(ダンスダメージ) + "以下のダメージを与える。",
      "大西ソング": "魔法。消費魔力" + str(消費魔力["大西ソング"]) + "。敵に通常攻撃と同等のダメージを与える。また、50%の確率で敵を混乱状態にする。",
      "大西フェイス": "魔法。消費魔力" + str(消費魔力["大西フェイス"]) + "。使うと…？",
      "ア・ラウンド・フォー・ティー": "魔法。消費魔力" + str(消費魔力["ア・ラウンド・フォー・ティー"]) + "。自分の年齢相応のダメージを敵に与える。",
      "ア・ラウンド・ファイブ・ハンドレッド": "魔法。消費魔力" + str(消費魔力["ア・ラウンド・ファイブ・ハンドレッド"]) + "。自分の年齢相応のダメージを敵に与える。",
      "針100本飲ます": "魔法。消費魔力" + str(消費魔力["針100本飲ます"]) + "。敵に100ダメージを与える。",
      "ハイパボリックタンジェントアタック": "魔法。消費魔力" + str(消費魔力["ハイパボリックタンジェントアタック"]) +
                           "。敵に通常攻撃の" + str(ハイパ倍率) + "倍のダメージを与える。また、それぞれ50%の確率で敵を毒、麻痺、混乱、睡眠状態にする。",
      "シャ・ラップ": "魔法。消費魔力" + str(消費魔力["シャ・ラップ"]) + "。自分と敵の魔力を0にする。",
      "Ｋ・Ｊ・Ａ":"魔法。消費魔力" + str(消費魔力["Ｋ・Ｊ・Ａ"]) + "。敵に最大で自分の攻撃力の100倍のダメージを与える。ただし、失敗すると自分が睡眠状態になるか、もしくは敵を回復してしまうことがある。",
      "毒":"状態。毎ターン終了時に最大体力の"+str(int(毒倍率*100))+"%のダメージを受ける。",
      "麻痺":"状態。"+str(int(麻痺確率*100))+"％の確率で行動不能になる。また、素早さが"+str(麻痺倍率)+"倍になる。",
      "睡眠":"状態。行動不能になり、1ターンごとに最大体力の"+str(int(睡眠回復率*100))+"％回復する。",
      "混乱":"状態。"+str(int(混乱確率*100))+"％の確率で行動不能になり、自分に攻撃する。ターン終了時、"+str(int(混乱解除率*100))+"％の確率で治る。"}

def 行動処理(行動, 使用者, 対象者):
    if 行動=="目覚まし時計":
        return 治療薬(使用者, "目覚まし時計", "睡眠"), 対象者
    if "睡眠" in 使用者["状態"]:
        print(使用者["名前"] + "は眠っている")
        使用者["体力"] = 回復処理(使用者["名前"], 使用者["体力"], 使用者["最大体力"] * 睡眠回復率, 使用者["最大体力"])
        return 使用者, 対象者
    if 行動 == "薬草":
        if "戦闘ステータス" in 使用者:
            return 回復薬(使用者, "薬草", 戦闘時の薬草の回復量, "体力", "最大体力"), 対象者
        return 回復薬(使用者, "薬草", 薬草の回復量, "体力", "最大体力"), 対象者
    if 行動 == "上薬草":
        if "戦闘ステータス" in 使用者:
            return 回復薬(使用者, "上薬草", 上薬草の回復量, "体力", "最大体力"), 対象者
        return 回復薬(使用者, "上薬草", 薬草の回復量*ラインナップ["上薬草"]["価格"]/ラインナップ["薬草"]["価格"], "体力", "最大体力"), 対象者
    if 行動 == "特薬草":
        if "戦闘ステータス" in 使用者:
            return 回復薬(使用者, "特薬草", 上薬草の回復量, "体力", "最大体力"), 対象者
        return 回復薬(使用者, "特薬草", 薬草の回復量*ラインナップ["特薬草"]["価格"]/ラインナップ["薬草"]["価格"], "体力", "最大体力"), 対象者
    if 行動 == "エリクサー":
        return 回復薬(使用者, "エリクサー",使用者["最大体力"]-使用者["体力"], "体力", "最大体力"), 対象者
    if 行動 == "毒消し":
        return 治療薬(使用者, "毒消し", "毒"), 対象者
    if 行動 == "麻痺治し":
        return 治療薬(使用者, "麻痺治し", "麻痺"), 対象者
    if 行動 == "気付け薬":
        return 治療薬(使用者, "気付け薬", "混乱"), 対象者
    if 行動 == "万能薬":
        if 戦闘専用の道具(使用者):
            使用者["道具"]["万能薬"] -= 1
            使用者 = アイテム切れ(使用者, "万能薬")
            if 無効判定(使用者["状態"], {}):
                使用者["状態"] = {}
                input(使用者["名前"] + "は健康になった\n")
        return 使用者,対象者

    if 行動 == "魔力剤":
        return 回復薬(使用者, "魔力剤", 魔力剤の回復量, "魔力", "最大魔力"),対象者
    if 行動 == "超魔力剤":
        if "戦闘ステータス" in 使用者:
            return 回復薬(使用者, "超魔力剤", 超魔力剤の回復量, "魔力", "最大魔力"),対象者
        return 回復薬(使用者, "超魔力剤", 魔力剤の回復量*ラインナップ["超魔力剤"]["価格"]/ラインナップ["魔力剤"]["価格"], "魔力", "最大魔力"), 対象者
    if 行動 == "モンスター":
        if 戦闘専用の道具(使用者):
            使用者["道具"]["モンスター"] -= 1
            使用者 = アイテム切れ(使用者, "モンスター")
            if 状態付加判定("攻撃力上昇", 使用者["状態"]):
                使用者["状態"]["攻撃力上昇"] = 攻撃力上昇ターン
                使用者["状態"]["素早さ上昇"] = 素早さ上昇ターン
                input(使用者["名前"] + "は攻撃力と素早さが上がった。\n")
        return 使用者,対象者

    if "麻痺" in 使用者["状態"]:
        if 麻痺確率 > random.random():
            input(使用者["名前"] + "は痺れている\n")
            return 使用者, 対象者
    if "混乱" in 使用者["状態"]:
        if 混乱確率 > random.random():
            print(使用者["名前"] + "はトチ狂った")
            使用者["体力"] = ダメージ処理(使用者["名前"], 使用者["体力"], 使用者["戦闘ステータス"]["攻撃力"],乱数=True,クリティカル=True,死亡判定=True)
            return 使用者, 対象者

    if 行動 == "逃げる":
        使用者["逃げる"]=1
        input(使用者["名前"] + "は逃げ出した\n")
    if 行動 == "攻撃":
        print(使用者["名前"] + "の攻撃")
        if 回避判定():
            対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"],乱数=True,クリティカル=True,死亡判定=True)

    if 行動 =="チャージ":
        if 魔力判定(使用者, "チャージ"):
            使用者["魔力"] -= 消費魔力["チャージ"]
            使用者["状態"]["攻撃力上昇"],使用者["状態"]["素早さ上昇"] = 2,素早さ上昇ターン
            input(使用者["名前"] + "は攻撃力と素早さが上がった。\n")

    if 行動 == "ファイア":
        if 魔力判定(使用者, "ファイア"):
            使用者["魔力"] -= 消費魔力["ファイア"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"] * ファイア倍率,乱数=False,クリティカル=False,死亡判定=True)

    if 行動 == "キュア":
        if 魔力判定(使用者, "キュア"):
            使用者["魔力"] -= 消費魔力["キュア"]
            if 無効判定(使用者["状態"], {}):
                使用者["状態"] = {}
                input(使用者["名前"] + "は健康になった\n")

    if 行動 == "ポイズン":
        if 魔力判定(使用者, "ポイズン"):
            使用者["魔力"] -= 消費魔力["ポイズン"]
            if 状態付加判定("毒", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["毒"] = 1
                    input(対象者["名前"] + "は毒を浴びた\n")

    if 行動 == "ヒール":
        if 魔力判定(使用者, "ヒール"):
            使用者["魔力"] -= 消費魔力["ヒール"]
            if 無効判定(使用者["体力"], 使用者["最大体力"]):
                使用者["体力"] = 回復処理(使用者["名前"], 使用者["体力"], 使用者["最大体力"] * ヒール倍率, 使用者["最大体力"])

    if 行動 == "プラズマ":
        if 魔力判定(使用者, "プラズマ"):
            使用者["魔力"] -= 消費魔力["プラズマ"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"] * プラズマ倍率,乱数=True,クリティカル=True,死亡判定=True)
                if not "麻痺" in 対象者["状態"]:
                    if プラズマ確率>random.random():
                        対象者["状態"]["麻痺"]=1
                        input(対象者["名前"] + "は体が麻痺した\n")

    if 行動 == "フレイム":
        if 魔力判定(使用者, "フレイム"):
            使用者["魔力"] -= 消費魔力["フレイム"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"] * フレイム倍率,乱数=True,クリティカル=True,死亡判定=True)

    if 行動 == "スリープ":
        if 魔力判定(使用者, "スリープ"):
            使用者["魔力"] -= 消費魔力["スリープ"]
            if 状態付加判定("睡眠", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["睡眠"] = 睡眠ターン
                    input(対象者["名前"] + "は眠ってしまった\n")

    if 行動 == "麻薬注入":
        if 魔力判定(使用者, "麻薬注入"):
            使用者["魔力"] -= 消費魔力["麻薬注入"]
            if 回避判定():
                対象者["状態"]["麻痺"],対象者["状態"]["混乱"],対象者["状態"]["攻撃力上昇"] = 1,1,攻撃力上昇ターン
                input(対象者["名前"] + "は攻撃力が上がったが、混乱し、麻痺した\n")

    if 行動 == "加速斬り":
        if 魔力判定(使用者, "加速斬り"):
            使用者["魔力"] -= 消費魔力["加速斬り"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"] ,乱数=True,クリティカル=True,死亡判定=True)
                使用者["状態"]["素早さ上昇"] = 素早さ上昇ターン
                input(使用者["名前"] + "は素早さが上がった\n")

    if 行動 == "予防接種":
        if 魔力判定(使用者, "予防接種"):
            使用者["魔力"] -= 消費魔力["予防接種"]
            if 状態付加判定("予防接種",使用者["状態"]):
                使用者["状態"]["予防接種"]=1
                input(使用者["名前"] + "は病気に備えた\n")

    if 行動 == "スピード":
        if 魔力判定(使用者, "スピード"):
            使用者["魔力"] -= 消費魔力["スピード"]
            使用者["状態"]["素早さ上昇"] = 素早さ上昇ターン
            input(使用者["名前"] + "は素早さが上がった\n")

    if 行動 == "ブレイブ":
        if 魔力判定(使用者, "ブレイブ"):
            使用者["魔力"] -= 消費魔力["ブレイブ"]
            使用者["状態"]["攻撃力上昇"] = 攻撃力上昇ターン
            input(使用者["名前"] + "は攻撃力が上がった\n")

    if 行動 == "ザップ":
        if 魔力判定(使用者, "ザップ"):
            使用者["魔力"] -= 消費魔力["ザップ"]
            if 状態付加判定("麻痺", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["麻痺"] = 1
                    input(対象者["名前"] + "は体が麻痺した\n")

    if 行動 == "トリック":
        if 魔力判定(使用者, "トリック"):
            使用者["魔力"] -= 消費魔力["トリック"]
            if 状態付加判定("混乱", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["混乱"] = 1
                    input(対象者["名前"] + "は混乱した\n")

    if 行動 == "スクイズ":
        if 魔力判定(使用者, "スクイズ"):
            使用者["魔力"] -= 消費魔力["スクイズ"]
            if 回避判定():
                print("魔力を吸い取った")
                対象者["魔力"] = ダメージ処理(対象者["名前"], 対象者["魔力"], スクイズダメージ,乱数=True,クリティカル=True,死亡判定=False)
                使用者["魔力"] = 回復処理(使用者["名前"],使用者["魔力"],スクイズダメージ,使用者["最大魔力"])
    if 行動 == "強制正座":
        if 魔力判定(使用者, "強制正座"):
            使用者["魔力"] -= 消費魔力["強制正座"]
            if 状態付加判定("麻痺", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["麻痺"] = 1
                    input(対象者["名前"] + "は体が麻痺した\n")

    if 行動 == "回転イス":
        if 魔力判定(使用者, "回転イス"):
            使用者["魔力"] -= 消費魔力["回転イス"]
            if 状態付加判定("混乱", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["混乱"] = 1
                    input(対象者["名前"] + "は混乱した\n")

    if 行動 == "長講義":
        if 魔力判定(使用者, "長講義"):
            使用者["魔力"] -= 消費魔力["長講義"]
            if 状態付加判定("睡眠", 対象者["状態"]):
                if 回避判定():
                    対象者["状態"]["睡眠"] = 睡眠ターン
                    input(対象者["名前"] + "は眠ってしまった\n")

    if 行動 == "長説教":
        if 魔力判定(使用者, "長説教"):
            使用者["魔力"] -= 消費魔力["長説教"]
            if 回避判定():
                print("魔力を削った")
                対象者["魔力"] = ダメージ処理(対象者["名前"], 対象者["魔力"], 長説教ダメージ,乱数=True,クリティカル=True,死亡判定=False)
                if not "睡眠" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["睡眠"]=睡眠ターン
                        input(対象者["名前"] + "は眠ってしまった\n")

    if 行動 == "体罰":
        if 魔力判定(使用者, "体罰"):
            使用者["魔力"] -= 消費魔力["体罰"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"],乱数=True,クリティカル=True,死亡判定=True)
                if not "混乱" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["混乱"]=1
                        input(対象者["名前"] + "は混乱した\n")

    if 行動 == "毒舌":
        if 魔力判定(使用者, "毒舌"):
            使用者["魔力"] -= 消費魔力["毒舌"]
            if 回避判定():
                print("魔力を削った")
                対象者["魔力"] = ダメージ処理(対象者["名前"], 対象者["魔力"], 毒舌ダメージ,乱数=True,クリティカル=True,死亡判定=False)
                if not "毒" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["毒"]=1
                        input(対象者["名前"] + "は毒に侵された\n")

    if 行動 == "鼻くそ爆弾":
        if 魔力判定(使用者, "鼻くそ爆弾"):
            使用者["魔力"] -= 消費魔力["鼻くそ爆弾"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"],乱数=True,クリティカル=True,死亡判定=True)
                if not "毒" in 対象者["状態"]:
                    if プラズマ確率>random.random():
                        対象者["状態"]["毒"]=1
                        input(対象者["名前"] + "は毒に侵された\n")

    if 行動 == "大西ステップ":
        if 魔力判定(使用者, "大西ステップ"):
            使用者["魔力"] -= 消費魔力["大西ステップ"]
            使用者["状態"]["素早さ上昇"] = 素早さ上昇ターン
            input(使用者["名前"] + "は素早さが上がった\n")

    if 行動 == "大西ダンス":
        if 魔力判定(使用者, "大西ダンス"):
            使用者["魔力"] -= 消費魔力["大西ダンス"]
            if 回避判定():
                print("魔力を削った")
                対象者["魔力"] = ダメージ処理(対象者["名前"], 対象者["魔力"], ダンスダメージ,乱数=True,クリティカル=True,死亡判定=False)

    if 行動 == "大西ソング":
        if 魔力判定(使用者, "大西ソング"):
            使用者["魔力"] -= 消費魔力["大西ソング"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"],乱数=True,クリティカル=True,死亡判定=True)
                if not "混乱" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["混乱"]=1
                        input(対象者["名前"] + "は混乱した\n")

    if 行動 == "大西フェイス":
        input(使用者["名前"]+"の全力の大西フェイス！\nしかし、何も起こらなかった\n")

    if 行動 == "ア・ラウンド・フォー・ティー":
        if 魔力判定(使用者, "ア・ラウンド・フォー・ティー"):
            使用者["魔力"] -= 消費魔力["ア・ラウンド・フォー・ティー"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 40+(int(random.random()*11-5)),乱数=False,クリティカル=False,死亡判定=True)

    if 行動 == "ア・ラウンド・ファイブ・ハンドレッド":
        if 魔力判定(使用者, "ア・ラウンド・ファイブ・ハンドレッド"):
            使用者["魔力"] -= 消費魔力["ア・ラウンド・ファイブ・ハンドレッド"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 500+(int(random.random()*21-10)),乱数=False,クリティカル=False,死亡判定=True)

    if 行動 == "針100本飲ます":
        if 魔力判定(使用者, "針100本飲ます"):
            使用者["魔力"] -= 消費魔力["針100本飲ます"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 100,乱数=False,クリティカル=False,死亡判定=True)

    if 行動 == "ハイパボリックタンジェントアタック":
        if 魔力判定(使用者, "ハイパボリックタンジェントアタック"):
            使用者["魔力"] -= 消費魔力["ハイパボリックタンジェントアタック"]
            if 回避判定():
                対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 使用者["戦闘ステータス"]["攻撃力"]*ハイパ倍率,乱数=True,クリティカル=True,死亡判定=True)
                if not "毒" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["毒"]=1
                        input(対象者["名前"] + "は毒に侵された\n")
                if not "麻痺" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["麻痺"]=1
                        input(対象者["名前"] + "は体が麻痺した\n")
                if not "睡眠" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["睡眠"]=睡眠ターン
                        input(対象者["名前"] + "は眠ってしまった\n")
                if not "混乱" in 対象者["状態"]:
                    if 0.5>random.random():
                        対象者["状態"]["混乱"]=1
                        input(対象者["名前"] + "は混乱した\n")

    if 行動 == "シャ・ラップ":
        使用者["魔力"]=対象者["魔力"]=0
        print(使用者["名前"] + "渾身のシャ・ラップ！")
        input("お互いの魔力が無くなった\n")

    if 行動 == "Ｋ・Ｊ・Ａ":
        if 魔力判定(使用者, "Ｋ・Ｊ・Ａ"):
            使用者["魔力"] -= 消費魔力["Ｋ・Ｊ・Ａ"]
            if くじょった():
                使用者["状態"]["睡眠"] = 睡眠ターン
                input(使用者["名前"] + "は昼寝を始めてしまった！\n")
            else:
                if 回避判定():
                    ダメージ=int(使用者["戦闘ステータス"]["攻撃力"]*100*random.random()*random.random()*random.random()*random.random()*random.random())
                    if くじょった():
                        input(使用者["名前"] + "は敵に塩を送った！\n")
                        対象者["体力"] = 回復処理(対象者["名前"], 対象者["体力"], ダメージ,対象者["最大体力"])
                    else:
                        対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], ダメージ,乱数=True,クリティカル=True,死亡判定=True)

    return 使用者, 対象者
def くじょった():
    if 公庄率>random.random():
        input("くじょった！！\n")
        return True
    return False

def 回避判定():
    if 回避率>random.random():
        input("しかし、攻撃は外れた\n")
        return False
    return True

def クリティカル判定():
    if クリティカル率>random.random():
        print("クリティカルヒット!")
        return True
    return False

def ダメージ処理(名前,体力,ダメージ,最小値=0,乱数=True,クリティカル=True,死亡判定=True):
    if 乱数:
        ダメージ=int(ダメージ*(0.5+random.random()*0.5))
    if クリティカル:
        if クリティカル判定():
            ダメージ*=2
    体力-=ダメージ
    input(名前 + "は" + str(ダメージ) + "のダメージを受けた\n")
    if 体力<最小値:
        体力=最小値
        if 死亡判定:
            input(名前+"が倒れた\n")
    return 体力

def 回復処理(名前,体力,回復量,最大値):
    回復量=int(回復量)
    体力+=回復量
    if 体力>最大値:
        体力=最大値
        input(名前+"は全回復した\n")
    else:
        input(名前 + "は" + str(回復量) + "回復した\n")
    return 体力

def 行動入力(プレイヤー):
    行動=input("1,攻撃 2,魔法 3,道具　4,逃げる\n")
    if 行動=="1":
        行動="攻撃"
    if 行動=="2":
        行動="魔法"
    if 行動=="3":
        行動="道具"
    if 行動=="4":
        行動="逃げる"
    if 行動!="攻撃" and 行動!="魔法" and 行動!="道具" and 行動!="逃げる":
        if 行動 == "":
            ステータス(プレイヤー)
        行動=行動入力(プレイヤー)
    if 行動=="魔法":
        t=0
        for i in プレイヤー["魔法"]:
            t+=1
            print(str(t)+","+i+"("+str(消費魔力[i])+") ",end="")
        行動=input("\n")
        try:
            行動 =プレイヤー["魔法"][int(行動)-1]
        except ValueError:
            if not 行動 in プレイヤー["魔法"]:
                return 行動入力(プレイヤー)
        except IndexError:
            return 行動入力(プレイヤー)

    if 行動=="道具":
        t=0
        道具選択リスト=[]
        for j in プレイヤー["道具"]:
            t+=1
            道具選択リスト.append(j)
            print(str(t)+","+j + "x" + str(プレイヤー["道具"][j])+" ", end="")
        行動=input("\n")
        if 行動=="":
            return 行動入力(プレイヤー)
        try:
            行動 =道具選択リスト[int(行動)-1]
        except ValueError:
            if not 行動 in 道具選択リスト:
                input("ちゃんと入力してください\n")
                return 行動入力(プレイヤー)
        except IndexError:
            return 行動入力(プレイヤー)
    return 行動

def 魔力判定(使用者,魔法名):
    print(使用者["名前"] + "の"+魔法名)
    if 使用者["魔力"]<消費魔力[魔法名]:
        input("しかし、魔力が足りなかった\n")
    return 使用者["魔力"]>=消費魔力[魔法名]

def 無効判定(変化値,限界値):
    if 変化値==限界値:
        input("しかし、効果が無かった\n")
        return False
    else:
        return True
def 治療判定(状態変化,現状態):
    if not 状態変化 in 現状態:
        input("しかし、効果が無かった\n")
        return False
    else:
        return True
def 状態付加判定(状態変化,現状態):
    if 状態変化 in 現状態:
        input("しかし、効果が無かった\n")
        return False
    else:
        return True

def アイテム切れ(使用者,アイテム名):
    print(使用者["名前"] + "は"+アイテム名+"を使った")
    if not 使用者["道具"][アイテム名]:
        del 使用者["道具"][アイテム名]
        print(アイテム名+"が無くなった")
    return 使用者

def 戦闘専用の道具(使用者):
    if "戦闘ステータス" in 使用者:
        return True
    else:
        input("戦闘中しか使えません\n")
        return False
def 回復薬(使用者,薬名,回復量,変化値名,最大値名):
    使用者["道具"][薬名] -= 1
    使用者 = アイテム切れ(使用者, 薬名)
    if 無効判定(使用者[変化値名], 使用者[最大値名]):
        使用者[変化値名] = 回復処理(使用者["名前"],使用者[変化値名],回復量, 使用者[最大値名])
    return 使用者

def 治療薬(使用者,薬名,変化値名):
    使用者["道具"][薬名] -= 1
    使用者 = アイテム切れ(使用者, 薬名)
    if 治療判定(変化値名, 使用者["状態"]):
        del 使用者["状態"][変化値名]
        input(使用者["名前"] + "は健康になった\n")
    return 使用者

def CPUの行動選択(敵):
    return 敵["行動"][int(len(敵["行動"])*random.random())]

def CPU戦の行動選択(プレイヤー,敵):
    print("\n{} 体力{}/{} 魔力{}/{}　　敵の体力{}/{}".format(プレイヤー["名前"],プレイヤー["体力"],プレイヤー["最大体力"],プレイヤー["魔力"],プレイヤー["最大魔力"],敵["体力"],敵["最大体力"]))
    return 行動入力(プレイヤー),CPUの行動選択(敵)

def 対人戦の行動選択(プレイヤー,敵):
    input("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"+プレイヤー["名前"]+"の行動選択です")
    print("\n{} 体力{}/{} 魔力{}/{}".format(プレイヤー["名前"],プレイヤー["体力"],プレイヤー["最大体力"],プレイヤー["魔力"],プレイヤー["最大魔力"]))
    プレイヤー行動=行動入力(プレイヤー)
    input("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"+敵["名前"]+"の行動選択です")
    print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{} 体力{}/{} 魔力{}/{}".format(敵["名前"],敵["体力"],敵["最大体力"],敵["魔力"],敵["最大魔力"]))
    敵行動=行動入力(敵)
    print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
    return プレイヤー行動,敵行動

def ターン処理(プレイヤー,敵,プレイヤー行動,敵行動):
    if プレイヤー["戦闘ステータス"]["素早さ"]*(0.5+random.random()*0.5)>敵["戦闘ステータス"]["素早さ"]*(0.5+random.random()*0.5):
        先手,後手,先手行動,後手行動=プレイヤー,敵,プレイヤー行動,敵行動
    else:
        先手,後手,先手行動,後手行動=敵,プレイヤー,敵行動,プレイヤー行動
    for 行動順 in ((先手行動,先手,後手),(後手行動,後手,先手)):
        行動,使用者,対象者=行動順
        使用者,対象者=行動処理(行動,使用者,対象者)
        if 対象者["体力"]==0 or 使用者["体力"]==0 or"逃げる" in 使用者:
            return プレイヤー,敵
    for 対象者 in (プレイヤー,敵):
        対象者["戦闘ステータス"]["攻撃力"],対象者["戦闘ステータス"]["素早さ"]=対象者["攻撃力"],対象者["素早さ"]
        if "予防接種" in 対象者["状態"]:
            if len(対象者["状態"])!=1:
                対象者["状態"]={}
                input(対象者["名前"]+"は予防接種により健康になった")

        if "毒" in 対象者["状態"]:
            print(対象者["名前"]+"は毒を浴びている")
            対象者["体力"] = ダメージ処理(対象者["名前"], 対象者["体力"], 対象者["最大体力"] * 毒倍率)
            if 対象者["体力"] == 0:
                return プレイヤー, 敵
        if "麻痺" in 対象者["状態"]:
            対象者["戦闘ステータス"]["素早さ"]=対象者["素早さ"]*麻痺倍率
        if "睡眠" in 対象者["状態"]:
            対象者["状態"]["睡眠"]-=1
            if not 対象者["状態"]["睡眠"]:
                del 対象者["状態"]["睡眠"]
                input(対象者["名前"] + "は目を覚ました")
        if "混乱" in 対象者["状態"]:
            if 混乱解除率>random.random():
                del 対象者["状態"]["混乱"]
                input(対象者["名前"] + "は混乱が溶けた")
        if "攻撃力上昇" in 対象者["状態"]:
            対象者["状態"]["攻撃力上昇"] -= 1
            if 対象者["状態"]["攻撃力上昇"]:
                対象者["戦闘ステータス"]["攻撃力"] = 対象者["攻撃力"]*攻撃力上昇率
            else:
                del 対象者["状態"]["攻撃力上昇"]
                input(対象者["名前"] + "の攻撃力が元に戻った")
        if "素早さ上昇" in 対象者["状態"]:
            対象者["状態"]["素早さ上昇"] -= 1
            if 対象者["状態"]["素早さ上昇"]:
                対象者["戦闘ステータス"]["素早さ"] = 対象者["素早さ"] * 素早さ上昇率
            else:
                del 対象者["状態"]["素早さ上昇"]
                input(対象者["名前"] + "の素早さが元に戻った")
    return プレイヤー,敵

def CPU戦ターン処理(プレイヤー,敵):
    プレイヤー行動,敵行動=CPU戦の行動選択(プレイヤー,敵)
    プレイヤー,敵=ターン処理(プレイヤー,敵,プレイヤー行動,敵行動)
    if "逃げる" in プレイヤー:
        del プレイヤー["逃げる"]
        return プレイヤー, 敵
    if "逃げる" in 敵:
        del 敵["逃げる"]
        return プレイヤー, 敵
    if プレイヤー["体力"] and 敵["体力"]:
        プレイヤー,敵=CPU戦ターン処理(プレイヤー,敵)
    return プレイヤー,敵

def 対人戦ターン処理(プレイヤー,敵):
    プレイヤー行動,敵行動=対人戦の行動選択(プレイヤー,敵)
    プレイヤー,敵=ターン処理(プレイヤー,敵,プレイヤー行動,敵行動)
    if プレイヤー行動=="逃げる":
        プレイヤー["体力"]=0
    if 敵行動=="逃げる":
        敵["体力"]=0
    if プレイヤー["体力"] and 敵["体力"]:
        プレイヤー,敵=対人戦ターン処理(プレイヤー,敵)
    return プレイヤー,敵

def 対人戦(プレイヤー,敵):
    for 対象者 in (プレイヤー,敵):
        対象者["戦闘ステータス"]={"攻撃力":対象者["攻撃力"],"素早さ":対象者["素早さ"]}
    input("\n"+プレイヤー["名前"]+"と"+敵["名前"]+"の戦闘が始まった")
    プレイヤー,敵=対人戦ターン処理(プレイヤー,敵)
    if プレイヤー["体力"]:
       input(プレイヤー["名前"]+"は戦闘に勝利した")
    else:
        input(敵["名前"] + "は戦闘に勝利した")
    return プレイヤー,敵

def CPU戦闘(プレイヤー,敵):
    for 対象者 in (プレイヤー,敵):
        対象者["戦闘ステータス"]={"攻撃力":対象者["攻撃力"],"素早さ":対象者["素早さ"]}
    input("\n"+敵["名前"]+"が現れた")
    プレイヤー,敵=CPU戦ターン処理(プレイヤー,敵)
    if not プレイヤー["体力"]:
        プレイヤー["体力"],プレイヤー["魔力"]=プレイヤー["最大体力"],プレイヤー["最大魔力"]
        プレイヤー["所持金"]=int(プレイヤー["所持金"]/2)
        プレイヤー["宿屋の利用回数"]+=2
        プレイヤー["ターン"] += 2
        input(敵["名前"]+"は"+プレイヤー["名前"]+"の持ち物を奪うようなことはせず、\n"+プレイヤー["名前"]+"の持ち金の半分で宿屋まで送ってくれた上、料金も負担してくれた")
        if プレイヤー["ターン"]>プレイヤー["ゲームのターン数"]:
            プレイヤー["体力"]=int(プレイヤー["最大体力"]/2)
            input(プレイヤー["名前"]+"は決戦日を寝過ごした\n")
        else:
            input("疲れ果てた"+プレイヤー["名前"]+"は宿屋で丸二日ぐっすり寝た\n")
    elif not 敵["体力"]:
        プレイヤー["最大体力"]+=敵["経験値"]["最大体力"]
        if プレイヤー["最大体力"]>=10000:
            プレイヤー["最大体力"]=9999
        プレイヤー["攻撃力"]+=敵["経験値"]["攻撃力"]
        if プレイヤー["攻撃力"]>=1000:
            プレイヤー["攻撃力"]=999
        プレイヤー["素早さ"]+=敵["経験値"]["素早さ"]
        if プレイヤー["素早さ"]>=1000:
            プレイヤー["素早さ"]=999
        プレイヤー["最大魔力"]+=敵["経験値"]["最大魔力"]
        if プレイヤー["最大魔力"]>=100:
            プレイヤー["最大魔力"]=99
        プレイヤー["所持金"]+=敵["経験値"]["所持金"]
        if プレイヤー["所持金"]>=100000:
            プレイヤー["所持金"]=99999
        input("{}は最大体力が{}上がった\n攻撃力が{}上がった\n素早さが{}上がった\n最大魔力が{}上がった\n金を{}円むしり取った"
              .format(プレイヤー["名前"],敵["経験値"]["最大体力"],敵["経験値"]["攻撃力"],敵["経験値"]["素早さ"],敵["経験値"]["最大魔力"],敵["経験値"]["所持金"]))
        for 敵行動 in 敵["行動"]:
            if 敵行動!="攻撃" and 敵行動!="超魔力剤" and 敵行動!="逃げる":
                if not 敵行動 in プレイヤー["魔法"]:
                    if 魔法取得率>random.random():
                        プレイヤー["魔法"].append(敵行動)
                        input(プレイヤー["名前"]+"は"+敵行動+"を覚えた\n")
    敵["体力"], 敵["魔力"] = 敵["最大体力"], 敵["最大魔力"]
    プレイヤー["状態"],敵["状態"]={},{}
    del プレイヤー["戦闘ステータス"]
    return プレイヤー

def 店(プレイヤー):
    商品リスト = []
    選択=input("\n何を買いますか？\n1,道具　2,魔導書\n")
    if 選択=="1":
        選択="道具"
    if 選択=="2":
        選択="魔導書"
    if 選択=="":
        return プレイヤー
    if 選択!="道具" and 選択!="魔導書":
        return 店(プレイヤー)
    if 選択=="道具":
        t=0
        print("\n所持金" + str(プレイヤー["所持金"]) + "円")
        for 商品 in ラインナップ順序:
            if ラインナップ[商品]["種類"]=="道具":
                print("  "+str(t+1)+","+商品 + "　" + str(ラインナップ[商品]["価格"])+"円",end="")
                商品リスト.append(商品)
                t+=1
                if not t%2:
                    if t==12:
                        break
                    print()
        購入 = input("\n")
        if 購入=="":
            return プレイヤー
        try:
            購入=商品リスト[int(購入)-1]
        except ValueError:
            if not 購入 in ラインナップ:
                input("ちゃんと入力してください\n")
                return 店(プレイヤー)
            if ラインナップ[購入]["種類"] != "道具":
                input("こちらは道具専門です\n")
                return 店(プレイヤー)
        except IndexError:
            return 店(プレイヤー)
        個数 = input("いくつ買いますか？\n")
        if 個数=="":
            個数=1
        try:
            個数 =int(個数)
        except ValueError:
            input("いくつかって聞いてんじゃ、ぼけなす！\n")
            return 店(プレイヤー)
        if ラインナップ[購入]["価格"]*個数>プレイヤー["所持金"]:
            input("買えません\n")
            return 店(プレイヤー)
        プレイヤー["所持金"]-=ラインナップ[購入]["価格"]*個数
        input(プレイヤー["名前"]+"は"+購入+"を"+str(個数)+"個買った")
        if 購入=="望遠鏡":
            プレイヤー["敵数"]+=個数
            プレイヤー["敵リスト"] = []
            for l in range(プレイヤー["敵数"]):
                プレイヤー["敵リスト"].append(敵一覧[int(len(敵一覧) * random.random())])
            return プレイヤー
        if 購入 in プレイヤー["道具"]:
            プレイヤー["道具"][購入]+=個数
        else:
            プレイヤー["道具"][購入]=個数
    if 選択=="魔導書":
        t=0
        print("\n所持金" + str(プレイヤー["所持金"]) + "円")
        for 商品 in ラインナップ順序:
            if ラインナップ[商品]["種類"]=="魔導書":
                print("  "+str(t+1)+","+商品 + "　" + str(ラインナップ[商品]["価格"])+"円",end="")
                商品リスト.append(商品)
                t+=1
                if not t%2:
                    print()
        購入 = input("\n")
        if 購入=="":
            return プレイヤー
        try:
            購入=商品リスト[int(購入)-1]
        except ValueError:
            if not 購入 in ラインナップ:
                input("ちゃんと入力してください\n")
                return 店(プレイヤー)
            if ラインナップ[購入]["種類"]!="魔導書":
                input("こちらは魔導書専門です\n")
                return 店(プレイヤー)
        except IndexError:
            return 店(プレイヤー)
        if ラインナップ[購入]["価格"]>プレイヤー["所持金"]:
            input("買えません\n")
            return 店(プレイヤー)
        if ラインナップ[購入]["魔法"] in プレイヤー["魔法"]:
            input("既に覚えています")
            return 店(プレイヤー)
        プレイヤー["所持金"]-=ラインナップ[購入]["価格"]
        input(プレイヤー["名前"]+"は"+購入+"を買った")
        プレイヤー["魔法"].append(ラインナップ[購入]["魔法"])
        input(プレイヤー["名前"]+"は"+ラインナップ[購入]["魔法"]+"を覚えた")
    return プレイヤー

def 宿屋(プレイヤー):
    行動=input("\n料金は"+str(宿屋の基本料金+宿屋の追加料金*プレイヤー["宿屋の利用回数"])+"円になります。泊まりますか?(決定は1)\n")
    if 行動=="1":
        行動="はい"
    if 行動=="はい":
        if プレイヤー["所持金"]>=宿屋の基本料金+宿屋の追加料金*プレイヤー["宿屋の利用回数"]:
            プレイヤー["所持金"]-=宿屋の基本料金+宿屋の追加料金*プレイヤー["宿屋の利用回数"]
            プレイヤー["体力"],プレイヤー["魔力"]=プレイヤー["最大体力"],プレイヤー["最大魔力"]
            プレイヤー["ターン"]+=1
            プレイヤー["宿屋の利用回数"]+=1
            プレイヤー["敵リスト"] = []
            for l in range(プレイヤー["敵数"]):
                プレイヤー["敵リスト"].append(敵一覧[int(len(敵一覧) * random.random())])
            input(プレイヤー["名前"]+"は全回復した")
        else:
            input("お金が足りません")
    return プレイヤー

def 戦闘(プレイヤー):
    print("\n誰と戦いますか")
    t=0
    for k in プレイヤー["敵リスト"]:
        print(str(t+1)+","+k+"("+str(敵情報[k]["最大体力"])+") ",end="")
        t+=1
        if not t%4:
            print()
    敵選択=input("\n")
    try:
        敵選択=プレイヤー["敵リスト"][int(敵選択)-1]
    except ValueError:
        pass
    except IndexError:
        return 戦闘(プレイヤー)
    if 敵選択 in プレイヤー["敵リスト"]:
        プレイヤー=CPU戦闘(プレイヤー,敵情報[敵選択])
        プレイヤー["ターン"] += 1
        プレイヤー["敵リスト"]=[]
        for l in range(プレイヤー["敵数"]):
            プレイヤー["敵リスト"].append(敵一覧[int(len(敵一覧) * random.random())])

    return プレイヤー

def ステータス(プレイヤー):
    print("\nターン{}/{} 体力{}/{} 魔力{}/{} 攻撃力{} 素早さ{}".format(プレイヤー["ターン"],プレイヤー["ゲームのターン数"],プレイヤー["体力"],プレイヤー["最大体力"],プレイヤー["魔力"],プレイヤー["最大魔力"],プレイヤー["攻撃力"],プレイヤー["素早さ"]))
    print("魔法：　",end="")
    for i in プレイヤー["魔法"]:
        print(i + "(" + str(消費魔力[i]) + ") ", end="")
    print("\n道具：　",end="")
    for j in プレイヤー["道具"]:
        print(j + "x" + str(プレイヤー["道具"][j]) + " ", end="")
    プレイヤーステータス情報 = プレイヤー["最大体力"] + プレイヤー["体力"] * 1e+4 + プレイヤー["攻撃力"] * 1e+8 + プレイヤー["素早さ"]* 1e+11
    プレイヤー魔法情報 = プレイヤー["最大魔力"]  + プレイヤー["魔力"] * 1e+2
    t = 0
    for l in 魔法リスト:
        if l in プレイヤー["魔法"]:
            プレイヤー魔法情報 += 2 ** t*1e+4
        t += 1
    if プレイヤー["ターン"]>=100:
        プレイヤー["ターン"]=99
    if プレイヤー["ゲームのターン数"] >=100:
        プレイヤー["ゲームのターン数"]=99
    プレイヤー道具情報 = プレイヤー["ターン"]+プレイヤー["ゲームのターン数"]*1e+2
    t = 4
    for l in ラインナップ順序:
        if l in プレイヤー["道具"]:
            if プレイヤー["道具"][l] > 9:
                プレイヤー["道具"][l] = 9
            プレイヤー道具情報 += プレイヤー["道具"][l]*10 ** t
        t += 1
    print("\nコード  "+変換(int(プレイヤーステータス情報)),変換(int(プレイヤー魔法情報)),変換(int(プレイヤー道具情報)))
    説明=input("\n詳細説明を見たい魔法、道具、状態の名前を入力してください\nデータを引き継ぐ場合は「引継ぎ」もしくは0を入力してください")
    if 説明 in 行動説明:
        input(行動説明[説明]+"\n")
        ステータス(プレイヤー)
    if 説明=="引継ぎ" or 説明=="0":
        プレイヤー=引継ぎ(プレイヤー)
    return プレイヤー

def 引継ぎ(プレイヤー):
    コピー=プレイヤー.copy()
    プレイヤーステータス=input("\n左側のコードを入力してください\n")
    if プレイヤーステータス=="":
        return コピー
    try:
        プレイヤーステータス=復元(プレイヤーステータス)
    except ValueError:
        return 引継ぎ(コピー)
    プレイヤー["最大体力"]=int(プレイヤーステータス%1e+4)
    プレイヤーステータス=int(プレイヤーステータス/1e+4)
    プレイヤー["体力"]=int(プレイヤーステータス%1e+4)
    プレイヤーステータス=int(プレイヤーステータス/1e+4)
    プレイヤー["攻撃力"]=int(プレイヤーステータス%1e+3)
    プレイヤーステータス=int(プレイヤーステータス/1e+3)
    プレイヤー["素早さ"]=int(プレイヤーステータス%1e+3)

    プレイヤー魔法=input("\n中央のコードを入力してください\n")
    if プレイヤー魔法=="":
        return コピー
    try:
        プレイヤー魔法=復元(プレイヤー魔法)
    except ValueError:
        return 引継ぎ(コピー)
    プレイヤー["最大魔力"]=int(プレイヤー魔法%1e+2)
    プレイヤー魔法=int(プレイヤー魔法/1e+2)
    プレイヤー["魔力"]=int(プレイヤー魔法%1e+2)
    プレイヤー魔法=int(プレイヤー魔法/1e+2)
    プレイヤー["魔法"]=[]
    for l in 魔法リスト:
        if プレイヤー魔法 %2:
            プレイヤー["魔法"].append(l)
        プレイヤー魔法=int(プレイヤー魔法/2)

    プレイヤー道具=input("\n右側のコードを入力してください\n")
    if プレイヤー道具=="":
        return コピー
    try:
        プレイヤー道具=復元(プレイヤー道具)
    except ValueError:
        return 引継ぎ(コピー)
    プレイヤー["ターン"]=int(プレイヤー道具%1e+2)
    プレイヤー道具=int(プレイヤー道具/1e+2)
    プレイヤー["ゲームのターン数"]=int(プレイヤー道具%1e+2)
    プレイヤー道具=int(プレイヤー道具/1e+2)
    プレイヤー["道具"]={}
    for l in ラインナップ順序:
        if プレイヤー道具 %10:
            プレイヤー["道具"][l]=プレイヤー道具 %10
        プレイヤー道具=int(プレイヤー道具/10)
    プレイヤー["引継ぎ"]=1
    return プレイヤー

def ターン進行(プレイヤー):
    行動=input("\nターン{}/{}　体力{}/{} 魔力{}/{} 所持金{}円\n1,戦闘　2,購入　3,宿屋 4,道具　\n".format(プレイヤー["ターン"],プレイヤー["ゲームのターン数"],プレイヤー["体力"],プレイヤー["最大体力"],プレイヤー["魔力"],プレイヤー["最大魔力"],プレイヤー["所持金"]))
    if 行動=="0":
        行動="引継ぎ"
    if 行動=="1":
        行動="戦闘"
    if 行動=="2":
        行動="購入"
    if 行動=="3":
        行動="宿屋"
    if 行動=="4":
        行動="道具"
    if 行動=="引継ぎ":
        プレイヤー=引継ぎ(プレイヤー)
    if 行動=="戦闘":
        プレイヤー=戦闘(プレイヤー)
    if 行動=="購入":
        プレイヤー=店(プレイヤー)
    if 行動=="宿屋":
        プレイヤー=宿屋(プレイヤー)
    if 行動=="道具":
        t=0
        道具選択リスト=[]
        for j in プレイヤー["道具"]:
            t+=1
            道具選択リスト.append(j)
            print(str(t)+","+j + "x" + str(プレイヤー["道具"][j])+" ", end="")
        道具選択=input("\n")
        try:
            道具選択 =道具選択リスト[int(道具選択)-1]
        except ValueError:
            pass
        except IndexError:
            pass
        if 道具選択 in 道具選択リスト:
            プレイヤー,プレイヤー=行動処理(道具選択,プレイヤー,プレイヤー)
    if 行動=="":
        プレイヤー=ステータス(プレイヤー)
    if "引継ぎ" in プレイヤー:
        del プレイヤー["引継ぎ"]
        return プレイヤー
    if プレイヤー["ターン"]<=プレイヤー["ゲームのターン数"]:
        プレイヤー=ターン進行(プレイヤー)
    return プレイヤー

def 魔王の行動(魔王):
    if 魔王["体力"]<魔王["最大体力"]*0.5:
        if 魔王["魔力"]>=消費魔力["ヒール"]:
            return "ヒール"
    if 魔王["状態"]!={} and not "攻撃力上昇" in 魔王["状態"]:
        if 魔王["魔力"]>=消費魔力["キュア"]:
            return "キュア"
    if 魔王["魔力"]>=消費魔力["ハイパボリックタンジェントアタック"]:
        return ("攻撃","攻撃","ブレイブ","フレイム","スリープ","ハイパボリックタンジェントアタック")[int(random.random()*6)]
    return "攻撃"

def 魔王戦の行動選択(プレイヤー,魔王):
    print("\n{} 体力{}/{} 魔力{}/{}".format(プレイヤー["名前"],プレイヤー["体力"],プレイヤー["最大体力"],プレイヤー["魔力"],プレイヤー["最大魔力"]))
    return 行動入力(プレイヤー),魔王の行動(魔王)

def 魔王戦ターン処理(プレイヤー,魔王):
    プレイヤー行動,魔王行動=魔王戦の行動選択(プレイヤー,魔王)
    プレイヤー,魔王=ターン処理(プレイヤー,魔王,プレイヤー行動,魔王行動)
    if プレイヤー行動=="逃げる":
        プレイヤー["体力"]=0
    if プレイヤー["体力"] and 魔王["体力"]:
        プレイヤー,魔王=魔王戦ターン処理(プレイヤー,魔王)
    return プレイヤー,魔王

def 魔王戦闘(プレイヤー,魔王):
    for 対象者 in (プレイヤー,魔王):
        対象者["戦闘ステータス"]={"攻撃力":対象者["攻撃力"],"素早さ":対象者["素早さ"]}
    input("____")
    input("\n"+魔王["名前"]+"が突然言いがかりをつけてきた!!")
    プレイヤー,魔王=魔王戦ターン処理(プレイヤー,魔王)
    if not プレイヤー["体力"]:
        input(プレイヤー["名前"]+"は魔王の座を奪われてしまった\n")
    elif not 魔王["体力"]:
        input(プレイヤー["名前"]+"は魔王の座を守り切った\n")

def RPG(プレイヤー1,プレイヤー2):
    global 魔法取得率
    for l in range(プレイヤー1["敵数"]):
        プレイヤー1["敵リスト"].append(敵一覧[int(len(敵一覧) * random.random())])
    for l in range(プレイヤー2["敵数"]):
        プレイヤー2["敵リスト"].append(敵一覧[int(len(敵一覧) * random.random())])
    プレイ人数=input("人数を入力してください")
    if プレイ人数=="":
        プレイ人数=1
    プレイ人数=int(プレイ人数)
    プレイヤー1["ゲームのターン数"]=プレイヤー2["ゲームのターン数"]=input("ターン数を入力してください")
    if プレイヤー1["ゲームのターン数"]=="":
        プレイヤー1["ゲームのターン数"]=プレイヤー2["ゲームのターン数"]=30
    プレイヤー1["ゲームのターン数"]=プレイヤー2["ゲームのターン数"]=int(プレイヤー1["ゲームのターン数"])
    if プレイヤー1["ゲームのターン数"] >= 50:
        プレイヤー1["所持金"] = プレイヤー2["所持金"] = 2000
        プレイヤー1["最大魔力"] = プレイヤー1["魔力"] = プレイヤー2["最大魔力"] = プレイヤー2["魔力"] = 3
        プレイヤー1["最大体力"] = プレイヤー1["体力"] = プレイヤー2["最大体力"] = プレイヤー2["体力"] = 50
        魔法取得率 = 0.01
        敵情報["自称魔王"]={"名前": "自称魔王", "最大体力": 10000, "体力": 10000, "攻撃力": 1000, "素早さ": 1000, "最大魔力": 100, "魔力": 100, "状態": {}}
    if プレイヤー1["ゲームのターン数"] <= 20:
        プレイヤー1["所持金"] = プレイヤー2["所持金"] = 3000
        プレイヤー1["最大魔力"] = プレイヤー1["魔力"] = プレイヤー2["最大魔力"] = プレイヤー2["魔力"] = 10
        プレイヤー1["最大体力"] = プレイヤー1["体力"] = プレイヤー2["最大体力"] = プレイヤー2["体力"] = 200
        魔法取得率 = 0.05
        敵情報["自称魔王"] = {"名前": "自称魔王", "最大体力": 1000, "体力": 1000, "攻撃力": 200, "素早さ": 200, "最大魔力": 30, "魔力": 30, "状態": {}}
    if プレイヤー1["ゲームのターン数"] <= 10:
        プレイヤー1["所持金"] = プレイヤー2["所持金"] = 5000
        プレイヤー1["最大体力"] = プレイヤー1["体力"] = プレイヤー2["最大体力"] = プレイヤー2["体力"] = 300
        魔法取得率 = 0.1
    プレイヤー1["名前"]=input("プレイヤー1の名前を入力してください")
    if プレイヤー1["名前"]=="":
        プレイヤー1["名前"]="魔王"
    if プレイヤー1["名前"]=="大西":
        プレイヤー1["魔法"].append("大西フェイス")
        input("大西特典!")
        input("大西は大西フェイスを覚えた!")
    if プレイ人数!=1:
        プレイヤー2["名前"]=input("プレイヤー2の名前を入力してください")
        if プレイヤー2["名前"]=="":
             プレイヤー2["名前"]="勇者"
        if プレイヤー2["名前"] == "大西":
            プレイヤー2["魔法"].append("大西フェイス")
            input("大西特典!")
            input("大西は大西フェイスを覚えた!")

    input("魔神「クドクドとシナリオを説明している場合はではない。要は勇者だ。はよ行け。魔王”"+プレイヤー1["名前"]+"”よ」")
    プレイヤー1=ターン進行(プレイヤー1)
    input("__決戦日__")
    if プレイ人数==1:
        input("？？？「魔王は俺だ」")
        input(プレイヤー1["名前"]+"「は？」")
        return 魔王戦闘(プレイヤー1,敵情報["自称魔王"])
    input("__一方勇者は__")
    input("王「魔王」")
    input(プレイヤー2["名前"]+"「把握」")
    プレイヤー2=ターン進行(プレイヤー2)
    input("____")
    input(プレイヤー2["名前"]+"「勝負だ」")
    input(プレイヤー1["名前"]+"「ああ」")

    対人戦(プレイヤー1,プレイヤー2)
alnum = "あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをん" \
        "がぎぐげござじずぜぞだぢづでどばびぶべぼぱぴぷぺぽ"
def 変換(num, chars = alnum):
    base = len(chars)
    string = ""
    while True:
        string = chars[num % base] + string
        num = num // base
        if num == 0:
            break
    return string

def 復元(string, chars = alnum):
    base = len(chars)
    num = 0
    for char in string:
        num = num * base + chars.index(char)
    return num
RPG(プレイヤー1,プレイヤー2)